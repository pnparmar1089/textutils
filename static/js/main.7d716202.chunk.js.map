{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","onClick","toggleMode","type","id","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7d716202.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n            <div className=\"container-fluid\" >\r\n                <a className=\"navbar-brand\" href=\"https://pnparmar1089.blogspot.com/\">Back</a>\r\n                <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n                \r\n                            \r\n                        \r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Change Mode</label>\r\n                    </div>\r\n                </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value) \r\n    }\r\n\r\n   \r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    \r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n   \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#212529'}}> \r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#495057':'white', color: props.mode==='dark'?'white':'#495057'}} id=\"myBox\" rows=\"6\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#212529'}}>\r\n             <h3>Your Text Summary:-</h3>\r\n             <p>words:- {text.length>0?text.split(\" \").length:\"0\"} </p>\r\n             <p>characters:- {text.length}</p>\r\n             <p>Avg.Time To Read:- {text.length>0?0.008 * (text.split(\" \").length):\"0\"} Min.</p>\r\n            <h3>Preview</h3>\r\n            \r\n            <textarea className=\"form-control\" value={text.length>0?text:\"Enter something in the textbox above to preview it here\"} style={{backgroundColor: props.mode==='dark'?'#495057':'white', color: props.mode==='dark'?'white':'#495057'}} rows=\"3\"></textarea>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade m-3 show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#212529';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n     \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n   \n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    \n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    \n            <TextForm showAlert={showAlert} heading=\"Enter Text Here\" mode={mode}/>\n          \n    </div>\n    \n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}